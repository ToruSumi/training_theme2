[
    {
        "id": "2c70ca21ab14e189",
        "type": "tab",
        "label": "ラズパイサイド（墨）",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aabf9e70d01fa680",
        "type": "rpi-gpio out",
        "z": "2c70ca21ab14e189",
        "name": "Spark LED",
        "pin": "13",
        "set": "",
        "level": "0",
        "freq": "3",
        "out": "pwm",
        "bcm": true,
        "x": 430,
        "y": 100,
        "wires": []
    },
    {
        "id": "a0d1e3f7f9596212",
        "type": "inject",
        "z": "2c70ca21ab14e189",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "aabf9e70d01fa680"
            ]
        ]
    },
    {
        "id": "3604c4d077dd3777",
        "type": "comment",
        "z": "2c70ca21ab14e189",
        "name": "LED",
        "info": "# 要件\n- msg.payloadに0,1のどちらかを入力\n  - 0: OFF\n  - 1: ON\n- ONの場合、3Hzで点滅する",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "4991def2adafd7b2",
        "type": "inject",
        "z": "2c70ca21ab14e189",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "aabf9e70d01fa680"
            ]
        ]
    },
    {
        "id": "0b0e83197eb665d9",
        "type": "comment",
        "z": "2c70ca21ab14e189",
        "name": "Temp/Humid",
        "info": "# 要件\n- 温湿度データを取得する\n- 複数回の温湿度データをPlaygroundに送信する",
        "x": 130,
        "y": 340,
        "wires": []
    },
    {
        "id": "5db4de9fcafe3f1d",
        "type": "inject",
        "z": "2c70ca21ab14e189",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "11b84a91790de22f"
            ]
        ]
    },
    {
        "id": "45c0484ec5cf8849",
        "type": "SHT3x",
        "z": "2c70ca21ab14e189",
        "name": "Get sensor data",
        "shtaddress": "0x44",
        "x": 500,
        "y": 580,
        "wires": [
            [
                "9bdf7b37ca3019b9",
                "17813ebfbf36e56e",
                "16f061ed1a75c691"
            ]
        ]
    },
    {
        "id": "16f061ed1a75c691",
        "type": "switch",
        "z": "2c70ca21ab14e189",
        "name": "count < until",
        "property": "count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "until",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 540,
        "wires": [
            [
                "8bc6d0ca35e48371",
                "993b125b2c96a3bc"
            ],
            [
                "56e3315853f4dbbb"
            ]
        ],
        "outputLabels": [
            "yet",
            "done"
        ]
    },
    {
        "id": "11b84a91790de22f",
        "type": "change",
        "z": "2c70ca21ab14e189",
        "name": "set values",
        "rules": [
            {
                "t": "set",
                "p": "until",
                "pt": "msg",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "count",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "delete",
                "p": "_session",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 400,
        "wires": [
            [
                "f0267bfc5d94453d"
            ]
        ]
    },
    {
        "id": "09ea9b18be617bec",
        "type": "function",
        "z": "2c70ca21ab14e189",
        "name": "count++",
        "func": "msg.count++;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 440,
        "wires": [
            [
                "45c0484ec5cf8849"
            ]
        ]
    },
    {
        "id": "8bc6d0ca35e48371",
        "type": "delay",
        "z": "2c70ca21ab14e189",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 440,
        "wires": [
            [
                "09ea9b18be617bec"
            ]
        ]
    },
    {
        "id": "9bdf7b37ca3019b9",
        "type": "change",
        "z": "2c70ca21ab14e189",
        "name": "get temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 640,
        "wires": [
            [
                "b716e7ea1487ada0"
            ]
        ]
    },
    {
        "id": "17813ebfbf36e56e",
        "type": "change",
        "z": "2c70ca21ab14e189",
        "name": "get humidity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.humidity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "20f7169f95a548ac"
            ]
        ]
    },
    {
        "id": "a201a1780b51d151",
        "type": "websocket in",
        "z": "2c70ca21ab14e189",
        "name": "LED ON/OFF websocket",
        "server": "",
        "client": "7b614d1a4c06177c",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "aabf9e70d01fa680",
                "aec0c9b9e53f7521"
            ]
        ]
    },
    {
        "id": "f0267bfc5d94453d",
        "type": "function",
        "z": "2c70ca21ab14e189",
        "name": "set empty array",
        "func": "let temp_array = [];\nlet humid_array = [];\nflow.set('temp', temp_array);\nflow.set('humid', humid_array);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "45c0484ec5cf8849"
            ]
        ]
    },
    {
        "id": "b716e7ea1487ada0",
        "type": "function",
        "z": "2c70ca21ab14e189",
        "name": "push temp",
        "func": "let temp_array = flow.get('temp');\nif (msg.payload != \"\") {\n    temp_array.push(msg.payload);\n    flow.set('temp', temp_array);\n}\nmsg.payload = temp_array;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "20f7169f95a548ac",
        "type": "function",
        "z": "2c70ca21ab14e189",
        "name": "push humid",
        "func": "let humid_array = flow.get('humid');\nif (msg.payload != \"\") {\n    humid_array.push(msg.payload);\n    flow.set('humid', humid_array);\n}\nmsg.payload = humid_array;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3769cb461c2631ff",
        "type": "websocket in",
        "z": "2c70ca21ab14e189",
        "name": "Start get sensor data",
        "server": "",
        "client": "cf7c9ddac4761235",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "11b84a91790de22f",
                "fcf56f23a324b736"
            ]
        ]
    },
    {
        "id": "56e3315853f4dbbb",
        "type": "change",
        "z": "2c70ca21ab14e189",
        "name": "set values into msg",
        "rules": [
            {
                "t": "set",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "temp",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "humid",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 540,
        "wires": [
            [
                "73636eb33446f198",
                "b9fbe47d8892fe8f",
                "5b3679166e983342"
            ]
        ]
    },
    {
        "id": "73636eb33446f198",
        "type": "websocket out",
        "z": "2c70ca21ab14e189",
        "name": "Send sensor data",
        "server": "",
        "client": "cf7c9ddac4761235",
        "x": 1350,
        "y": 540,
        "wires": []
    },
    {
        "id": "b9fbe47d8892fe8f",
        "type": "debug",
        "z": "2c70ca21ab14e189",
        "name": "debug temperature",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.temperature",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 640,
        "wires": []
    },
    {
        "id": "5b3679166e983342",
        "type": "debug",
        "z": "2c70ca21ab14e189",
        "name": "debug humidity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.humidity",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 700,
        "wires": []
    },
    {
        "id": "993b125b2c96a3bc",
        "type": "template",
        "z": "2c70ca21ab14e189",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "count: {{flow.count}}\ntemp: {{flow.temp}}\nhumid: {{flow.humid}}",
        "output": "str",
        "x": 1180,
        "y": 400,
        "wires": [
            [
                "e8e43858d09109ec"
            ]
        ]
    },
    {
        "id": "e8e43858d09109ec",
        "type": "debug",
        "z": "2c70ca21ab14e189",
        "name": "debug msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 400,
        "wires": []
    },
    {
        "id": "fcf56f23a324b736",
        "type": "debug",
        "z": "2c70ca21ab14e189",
        "name": "debug msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 340,
        "wires": []
    },
    {
        "id": "aec0c9b9e53f7521",
        "type": "debug",
        "z": "2c70ca21ab14e189",
        "name": "debug msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 40,
        "wires": []
    },
    {
        "id": "7b614d1a4c06177c",
        "type": "websocket-client",
        "path": "wss://iot23-group-g.gcp.pgtls.net/ledonoff/sumi",
        "tls": "fb96bce08282c9a3",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "cf7c9ddac4761235",
        "type": "websocket-client",
        "path": "wss://iot23-group-g.gcp.pgtls.net/sensor/sumi",
        "tls": "fb96bce08282c9a3",
        "wholemsg": "true",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "fb96bce08282c9a3",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "pg_client_share.pem",
        "keyname": "pg_client_share.pem",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    }
]